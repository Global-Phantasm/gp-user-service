plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'maven-publish'
    id 'jacoco'	
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Global-Phantasm/gp-user-service")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        bootJava(MavenPublication) {
			artifact tasks.named("bootJar")
		}
    }
}

group = 'com.gp.pf.user.service'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco {
    toolVersion = "0.8.7" 
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation platform('org.testcontainers:testcontainers-bom:1.19.3') 
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
	testImplementation "org.testcontainers:mongodb:1.19.3" 
	testImplementation "org.testcontainers:junit-jupiter:1.19.3"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	jacoco {
        enabled = true
        includes = ['com/**']
        excludes = ['com/exclude/**']
    }
}
tasks.named("bootJar") {
	archiveClassifier = 'boot'
}

tasks.named("jar") {
	archiveClassifier = ''
}
